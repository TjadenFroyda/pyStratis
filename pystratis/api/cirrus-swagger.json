{
  "openapi": "3.0.1",
  "info": {
    "title": "Stratis Node API",
    "description": "Access to the Stratis Node's core features.",
    "version": "1"
  },
  "paths": {
    "/api/AddressBook/address": {
      "post": {
        "tags": [
          "AddressBook"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressBookEntryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressBookEntryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressBookEntryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressBookEntryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "AddressBook"
        ],
        "parameters": [
          {
            "name": "label",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/AddressBook": {
      "get": {
        "tags": [
          "AddressBook"
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Balances/over-amount-at-height": {
      "get": {
        "tags": [
          "Balances"
        ],
        "parameters": [
          {
            "name": "blockHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/BlockStore/addressindexertip": {
      "get": {
        "tags": [
          "BlockStore"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/BlockStore/block": {
      "get": {
        "tags": [
          "BlockStore"
        ],
        "parameters": [
          {
            "name": "Hash",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShowTransactionDetails",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OutputJson",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/BlockStore/getblockcount": {
      "get": {
        "tags": [
          "BlockStore"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/BlockStore/getaddressesbalances": {
      "get": {
        "tags": [
          "BlockStore"
        ],
        "parameters": [
          {
            "name": "addresses",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minConfirmations",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/BlockStore/getverboseaddressesbalances": {
      "get": {
        "tags": [
          "BlockStore"
        ],
        "parameters": [
          {
            "name": "addresses",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/BlockStore/getutxoset": {
      "get": {
        "tags": [
          "BlockStore"
        ],
        "parameters": [
          {
            "name": "atBlockHeight",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/BlockStore/getlastbalanceupdatetransaction": {
      "get": {
        "tags": [
          "BlockStore"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Collateral/joinfederation": {
      "post": {
        "tags": [
          "Collateral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JoinFederationRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinFederationRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinFederationRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JoinFederationRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/ConnectionManager/addnode": {
      "get": {
        "tags": [
          "ConnectionManager"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "command",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/ConnectionManager/getpeerinfo": {
      "get": {
        "tags": [
          "ConnectionManager"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Consensus/deploymentflags": {
      "get": {
        "tags": [
          "Consensus"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Consensus/getbestblockhash": {
      "get": {
        "tags": [
          "Consensus"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Consensus/getblockhash": {
      "get": {
        "tags": [
          "Consensus"
        ],
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Dashboard/Stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Dashboard/AsyncLoopsStats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Diagnostic/GetConnectedPeersInfo": {
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "summary": "Returns the connected peers with some information",
        "responses": {
          "200": {
            "description": "Returns connected peers information"
          },
          "400": {
            "description": "Unexpected exception occurred"
          }
        }
      }
    },
    "/api/Diagnostic/GetStatus": {
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "summary": "Gets the Diagnostic Feature status.",
        "responses": {
          "200": {
            "description": "Returns the status"
          },
          "400": {
            "description": "Unexpected exception occurred"
          }
        }
      }
    },
    "/api/Diagnostic/GetPeerStatistics": {
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "summary": "Returns the connected peers with some statistical information.",
        "parameters": [
          {
            "name": "connectedOnly",
            "in": "query",
            "description": "if set to {true} returns statistics related to connected peers only.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns connected peers statistics",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PeerStatisticsModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PeerStatisticsModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PeerStatisticsModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected exception occurred"
          }
        }
      }
    },
    "/api/Diagnostic/StartCollectingPeerStatistics": {
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "summary": "Starts collecting peers statistics.",
        "responses": {
          "200": {
            "description": "Peer statistics collection started"
          },
          "400": {
            "description": "Unexpected exception occurred"
          }
        }
      }
    },
    "/api/Diagnostic/StopCollectingPeerStatistics": {
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "summary": "Stops collecting peers statistics.\r\nStopping a running peer statistic collecotr doesn't clear obtained results.",
        "responses": {
          "200": {
            "description": "Peer statistics collection stopped"
          },
          "400": {
            "description": "Unexpected exception occurred"
          }
        }
      }
    },
    "/api/Federation/reconstruct": {
      "put": {
        "tags": [
          "Federation"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Federation/members/current": {
      "get": {
        "tags": [
          "Federation"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Federation/members": {
      "get": {
        "tags": [
          "Federation"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Mempool/getrawmempool": {
      "get": {
        "tags": [
          "Mempool"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Network/disconnect": {
      "post": {
        "tags": [
          "Network"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DisconnectPeerViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisconnectPeerViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisconnectPeerViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DisconnectPeerViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Network/setban": {
      "post": {
        "tags": [
          "Network"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetBanPeerViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBanPeerViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBanPeerViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetBanPeerViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Network/getbans": {
      "get": {
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Network/clearbanned": {
      "post": {
        "tags": [
          "Network"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Node/status": {
      "get": {
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/getblockheader": {
      "get": {
        "tags": [
          "Node"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isJsonFormat",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/getrawtransaction": {
      "get": {
        "tags": [
          "Node"
        ],
        "parameters": [
          {
            "name": "trxid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/decoderawtransaction": {
      "post": {
        "tags": [
          "Node"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DecodeRawTransactionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DecodeRawTransactionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DecodeRawTransactionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DecodeRawTransactionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/validateaddress": {
      "get": {
        "tags": [
          "Node"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/gettxout": {
      "get": {
        "tags": [
          "Node"
        ],
        "parameters": [
          {
            "name": "trxid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "includeMemPool",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/gettxoutproof": {
      "get": {
        "tags": [
          "Node"
        ],
        "parameters": [
          {
            "name": "txids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "blockhash",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/shutdown": {
      "post": {
        "tags": [
          "Node"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/stop": {
      "post": {
        "tags": [
          "Node"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/loglevels": {
      "put": {
        "tags": [
          "Node"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogRulesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogRulesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogRulesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogRulesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/logrules": {
      "get": {
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Node/asyncloops": {
      "get": {
        "tags": [
          "Node"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RPC/callbyname": {
      "post": {
        "tags": [
          "RPC"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/RPC/listmethods": {
      "get": {
        "tags": [
          "RPC"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/api/SignalR/getConnectionInfo": {
      "get": {
        "tags": [
          "SignalR"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SmartContracts/code": {
      "get": {
        "tags": [
          "SmartContracts"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SmartContracts/balance": {
      "get": {
        "tags": [
          "SmartContracts"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SmartContracts/storage": {
      "get": {
        "tags": [
          "SmartContracts"
        ],
        "parameters": [
          {
            "name": "ContractAddress",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StorageKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataType",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MethodParameterDataType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContracts/receipt": {
      "get": {
        "tags": [
          "SmartContracts"
        ],
        "parameters": [
          {
            "name": "txHash",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContracts/receipt-search": {
      "get": {
        "tags": [
          "SmartContracts"
        ],
        "parameters": [
          {
            "name": "contractAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topics",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fromBlock",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "toBlock",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SmartContracts/build-create": {
      "post": {
        "tags": [
          "SmartContracts"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContracts/build-call": {
      "post": {
        "tags": [
          "SmartContracts"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContracts/build-transaction": {
      "post": {
        "tags": [
          "SmartContracts"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildContractTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildContractTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildContractTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildContractTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContracts/estimate-fee": {
      "post": {
        "tags": [
          "SmartContracts"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScTxFeeEstimateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScTxFeeEstimateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScTxFeeEstimateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScTxFeeEstimateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContracts/build-and-send-create": {
      "post": {
        "tags": [
          "SmartContracts"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/SmartContracts/build-and-send-call": {
      "post": {
        "tags": [
          "SmartContracts"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/SmartContracts/local-call": {
      "post": {
        "tags": [
          "SmartContracts"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LocalCallContractRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalCallContractRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalCallContractRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocalCallContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/SmartContracts/address-balances": {
      "get": {
        "tags": [
          "SmartContracts"
        ],
        "parameters": [
          {
            "name": "walletName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SmartContractWallet/account-addresses": {
      "get": {
        "tags": [
          "SmartContractWallet"
        ],
        "parameters": [
          {
            "name": "walletName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContractWallet/address-balance": {
      "get": {
        "tags": [
          "SmartContractWallet"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SmartContractWallet/history": {
      "get": {
        "tags": [
          "SmartContractWallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/SmartContractWallet/create": {
      "post": {
        "tags": [
          "SmartContractWallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCreateContractTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContractWallet/call": {
      "post": {
        "tags": [
          "SmartContractWallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildCallContractTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/SmartContractWallet/send-transaction": {
      "post": {
        "tags": [
          "SmartContractWallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Voting/polls/pending": {
      "get": {
        "tags": [
          "Voting"
        ],
        "parameters": [
          {
            "name": "voteType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/VoteKey"
            }
          },
          {
            "name": "pubKeyOfMemberBeingVotedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Voting/polls/finished": {
      "get": {
        "tags": [
          "Voting"
        ],
        "parameters": [
          {
            "name": "voteType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/VoteKey"
            }
          },
          {
            "name": "pubKeyOfMemberBeingVotedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Voting/polls/executed": {
      "get": {
        "tags": [
          "Voting"
        ],
        "parameters": [
          {
            "name": "voteType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/VoteKey"
            }
          },
          {
            "name": "pubKeyOfMemberBeingVotedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Voting/whitelistedhashes": {
      "get": {
        "tags": [
          "Voting"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Voting/schedulevote-whitelisthash": {
      "post": {
        "tags": [
          "Voting"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Voting/schedulevote-removehash": {
      "post": {
        "tags": [
          "Voting"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Voting/scheduledvotes": {
      "get": {
        "tags": [
          "Voting"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Wallet/mnemonic": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "English"
            }
          },
          {
            "name": "wordCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Wallet/create": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/signmessage": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SignMessageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SignMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SignMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/pubkey": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PubKeyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PubKeyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PubKeyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PubKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/verifymessage": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/load": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletLoadRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletLoadRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletLoadRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletLoadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/recover": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletRecoveryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletRecoveryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletRecoveryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletRecoveryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/recover-via-extpubkey": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletExtPubRecoveryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletExtPubRecoveryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletExtPubRecoveryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletExtPubRecoveryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/general-info": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/transactionCount": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/history": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PrevOutputTxTime",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PrevOutputIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/balance": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeBalanceByAddress",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/received-by-address": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "Address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/maxbalance": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FeeType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AllowUnconfirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/spendable-transactions": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MinConfirmations",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/estimate-txfee": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TxFeeEstimateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TxFeeEstimateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TxFeeEstimateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TxFeeEstimateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/build-transaction": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/build-interflux-transaction": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildInterFluxTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildInterFluxTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildInterFluxTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildInterFluxTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/send-transaction": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/list-wallets": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/account": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUnusedAccountModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUnusedAccountModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUnusedAccountModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUnusedAccountModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/accounts": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/unusedaddress": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Segwit",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/unusedaddresses": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Segwit",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/newaddresses": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Segwit",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Wallet/addresses": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Segwit",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/remove-transactions": {
      "delete": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "all",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReSync",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/remove-wallet": {
      "delete": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/extpubkey": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/privatekey": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RetrievePrivateKeyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrievePrivateKeyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrievePrivateKeyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetrievePrivateKeyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/sync": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HashModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/Wallet/sync-from-date": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletSyncRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletSyncRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletSyncRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WalletSyncRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/wallet-stats": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "name": "WalletName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MinConfirmations",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Verbose",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/splitcoins": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SplitCoinsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitCoinsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitCoinsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SplitCoinsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/distribute-utxos": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeUtxosRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeUtxosRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeUtxosRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeUtxosRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/sweep": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SweepRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SweepRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SweepRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SweepRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/build-offline-sign-request": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOfflineSignRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOfflineSignRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOfflineSignRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildOfflineSignRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/offline-sign-request": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineSignRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineSignRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineSignRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineSignRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Wallet/consolidate": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsolidationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsolidationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsolidationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConsolidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressBookEntryRequest": {
        "required": [
          "address",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "maxLength": 200,
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddressDescriptor": {
        "required": [
          "address",
          "keyPath"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "keyPath": {
            "type": "string"
          },
          "addressType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildCallContractTransactionRequest": {
        "required": [
          "amount",
          "contractAddress",
          "methodName",
          "password",
          "sender",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "contractAddress": {
            "type": "string"
          },
          "methodName": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "feeAmount": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "gasPrice": {
            "maximum": 10000,
            "minimum": 100,
            "type": "integer",
            "format": "int64"
          },
          "gasLimit": {
            "maximum": 250000,
            "minimum": 10000,
            "type": "integer",
            "format": "int64"
          },
          "sender": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildContractTransactionRequest": {
        "required": [
          "password",
          "sender",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "sender": {
            "type": "string"
          },
          "feeAmount": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "segwitChangeAddress": {
            "type": "boolean"
          },
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "recipients": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientModel"
            },
            "nullable": true
          },
          "opReturnData": {
            "type": "string",
            "nullable": true
          },
          "opReturnAmount": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "allowUnconfirmed": {
            "type": "boolean"
          },
          "shuffleOutputs": {
            "type": "boolean",
            "nullable": true
          },
          "changeAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildCreateContractTransactionRequest": {
        "required": [
          "amount",
          "contractCode",
          "password",
          "sender",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "amount": {
            "type": "string"
          },
          "feeAmount": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "contractCode": {
            "type": "string"
          },
          "gasPrice": {
            "maximum": 10000,
            "minimum": 100,
            "type": "integer",
            "format": "int64"
          },
          "gasLimit": {
            "maximum": 250000,
            "minimum": 12000,
            "type": "integer",
            "format": "int64"
          },
          "sender": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildInterFluxTransactionRequest": {
        "required": [
          "password",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "destinationChain": {
            "type": "integer",
            "format": "int32"
          },
          "destinationAddress": {
            "type": "string",
            "nullable": true
          },
          "feeAmount": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "segwitChangeAddress": {
            "type": "boolean"
          },
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "recipients": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientModel"
            },
            "nullable": true
          },
          "opReturnData": {
            "type": "string",
            "nullable": true
          },
          "opReturnAmount": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "allowUnconfirmed": {
            "type": "boolean"
          },
          "shuffleOutputs": {
            "type": "boolean",
            "nullable": true
          },
          "changeAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildOfflineSignRequest": {
        "required": [
          "walletName"
        ],
        "type": "object",
        "properties": {
          "feeAmount": {
            "type": "string",
            "nullable": true
          },
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "recipients": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientModel"
            },
            "nullable": true
          },
          "opReturnData": {
            "type": "string",
            "nullable": true
          },
          "opReturnAmount": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "allowUnconfirmed": {
            "type": "boolean"
          },
          "shuffleOutputs": {
            "type": "boolean",
            "nullable": true
          },
          "changeAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuildTransactionRequest": {
        "required": [
          "password",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "feeAmount": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "segwitChangeAddress": {
            "type": "boolean"
          },
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "recipients": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientModel"
            },
            "nullable": true
          },
          "opReturnData": {
            "type": "string",
            "nullable": true
          },
          "opReturnAmount": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "allowUnconfirmed": {
            "type": "boolean"
          },
          "shuffleOutputs": {
            "type": "boolean",
            "nullable": true
          },
          "changeAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsolidationRequest": {
        "required": [
          "walletName",
          "walletPassword"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "walletPassword": {
            "type": "string"
          },
          "singleAddress": {
            "type": "string",
            "nullable": true
          },
          "destinationAddress": {
            "type": "string",
            "nullable": true
          },
          "utxoValueThreshold": {
            "type": "string",
            "nullable": true
          },
          "broadcast": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DecodeRawTransactionModel": {
        "type": "object",
        "properties": {
          "rawHex": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisconnectPeerViewModel": {
        "type": "object",
        "properties": {
          "peerAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DistributeUtxosRequest": {
        "required": [
          "dryRun",
          "utxoPerTransaction",
          "utxosCount",
          "walletName",
          "walletPassword"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "walletPassword": {
            "type": "string"
          },
          "useUniqueAddressPerUtxo": {
            "type": "boolean",
            "default": false
          },
          "reuseAddresses": {
            "type": "boolean",
            "default": true
          },
          "useChangeAddresses": {
            "type": "boolean",
            "default": false
          },
          "utxosCount": {
            "type": "integer",
            "format": "int32"
          },
          "utxoPerTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "timestampDifferenceBetweenTransactions": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "minConfirmations": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "dryRun": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetUnusedAccountModel": {
        "required": [
          "password",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "HashModel": {
        "required": [
          "hash"
        ],
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "JoinFederationRequestModel": {
        "required": [
          "collateralAddress",
          "collateralWalletName",
          "collateralWalletPassword",
          "walletAccount",
          "walletName",
          "walletPassword"
        ],
        "type": "object",
        "properties": {
          "collateralAddress": {
            "type": "string"
          },
          "collateralWalletName": {
            "type": "string"
          },
          "collateralWalletPassword": {
            "type": "string"
          },
          "walletName": {
            "type": "string"
          },
          "walletPassword": {
            "type": "string"
          },
          "walletAccount": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LocalCallContractRequest": {
        "required": [
          "contractAddress",
          "methodName"
        ],
        "type": "object",
        "properties": {
          "contractAddress": {
            "type": "string"
          },
          "methodName": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "gasPrice": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "gasLimit": {
            "maximum": 250000,
            "minimum": 10000,
            "type": "integer",
            "format": "int64"
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogRuleRequest": {
        "required": [
          "logLevel",
          "ruleName"
        ],
        "type": "object",
        "properties": {
          "ruleName": {
            "type": "string"
          },
          "logLevel": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LogRulesRequest": {
        "type": "object",
        "properties": {
          "logRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogRuleRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MethodParameterDataType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "OfflineSignRequest": {
        "required": [
          "walletPassword"
        ],
        "type": "object",
        "properties": {
          "walletPassword": {
            "type": "string"
          },
          "walletName": {
            "type": "string",
            "nullable": true
          },
          "walletAccount": {
            "type": "string",
            "nullable": true
          },
          "unsignedTransaction": {
            "type": "string",
            "nullable": true
          },
          "fee": {
            "type": "string",
            "nullable": true
          },
          "utxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtxoDescriptor"
            },
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDescriptor"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OutpointRequest": {
        "required": [
          "index",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PeerStatisticsModel": {
        "type": "object",
        "properties": {
          "peerEndPoint": {
            "type": "string",
            "nullable": true
          },
          "connected": {
            "type": "boolean"
          },
          "inbound": {
            "type": "boolean"
          },
          "bytesSent": {
            "type": "integer",
            "format": "int64"
          },
          "bytesReceived": {
            "type": "integer",
            "format": "int64"
          },
          "receivedMessages": {
            "type": "integer",
            "format": "int32"
          },
          "sentMessages": {
            "type": "integer",
            "format": "int32"
          },
          "latestEvents": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PubKeyRequest": {
        "required": [
          "externalAddress",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "externalAddress": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RecipientModel": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "destinationAddress": {
            "type": "string",
            "nullable": true
          },
          "destinationScript": {
            "type": "string",
            "nullable": true
          },
          "subtractFeeFromAmount": {
            "type": "boolean"
          },
          "amount": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RetrievePrivateKeyModel": {
        "required": [
          "address",
          "password",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "walletName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ScTxFeeEstimateRequest": {
        "required": [
          "sender",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "sender": {
            "type": "string"
          },
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "recipients": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientModel"
            },
            "nullable": true
          },
          "opReturnData": {
            "type": "string",
            "nullable": true
          },
          "opReturnAmount": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "allowUnconfirmed": {
            "type": "boolean"
          },
          "shuffleOutputs": {
            "type": "boolean",
            "nullable": true
          },
          "changeAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendTransactionRequest": {
        "required": [
          "hex"
        ],
        "type": "object",
        "properties": {
          "hex": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SetBanPeerViewModel": {
        "type": "object",
        "properties": {
          "banCommand": {
            "type": "string",
            "nullable": true
          },
          "banDurationSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "peerAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignMessageRequest": {
        "required": [
          "externalAddress",
          "message",
          "password",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "externalAddress": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SplitCoinsRequest": {
        "required": [
          "totalAmountToSplit",
          "utxosCount",
          "walletName",
          "walletPassword"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "walletPassword": {
            "type": "string"
          },
          "totalAmountToSplit": {
            "type": "string"
          },
          "utxosCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SweepRequest": {
        "required": [
          "destinationAddress",
          "privateKeys"
        ],
        "type": "object",
        "properties": {
          "privateKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "destinationAddress": {
            "type": "string"
          },
          "broadcast": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TxFeeEstimateRequest": {
        "required": [
          "walletName"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "outpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutpointRequest"
            },
            "nullable": true
          },
          "recipients": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientModel"
            },
            "nullable": true
          },
          "opReturnData": {
            "type": "string",
            "nullable": true
          },
          "opReturnAmount": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "allowUnconfirmed": {
            "type": "boolean"
          },
          "shuffleOutputs": {
            "type": "boolean",
            "nullable": true
          },
          "changeAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UtxoDescriptor": {
        "required": [
          "index",
          "scriptPubKey",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "scriptPubKey": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyRequest": {
        "required": [
          "externalAddress",
          "message",
          "signature"
        ],
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          },
          "externalAddress": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VoteKey": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "WalletCreationRequest": {
        "required": [
          "name",
          "passphrase",
          "password"
        ],
        "type": "object",
        "properties": {
          "mnemonic": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string"
          },
          "passphrase": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WalletExtPubRecoveryRequest": {
        "required": [
          "accountIndex",
          "extPubKey",
          "name"
        ],
        "type": "object",
        "properties": {
          "extPubKey": {
            "type": "string"
          },
          "accountIndex": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WalletLoadRequest": {
        "required": [
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WalletRecoveryRequest": {
        "required": [
          "mnemonic",
          "name",
          "passphrase",
          "password"
        ],
        "type": "object",
        "properties": {
          "mnemonic": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passphrase": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WalletSyncRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "all": {
            "type": "boolean"
          },
          "walletName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}